{"version":3,"sources":["services/userAPI.js","components/Loading.js","components/Header.js","services/favoriteSongsAPI.js","components/MusicCard.js","services/musicsAPI.js","pages/Album.js","pages/Favorites.js","pages/Login.js","pages/NotFound.js","pages/Profile.js","pages/ProfileEdit.js","components/AlbumCard.js","services/searchAlbumsAPI.js","pages/Search.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Loading","className","Component","Header","state","loading","a","this","setState","userImg","to","src","alt","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","target","props","track","toggleLoadingHandler","updateHandler","wasChecked","checked","currentTarget","songContainer","document","querySelector","getComputedStyle","justifyContent","classList","add","currentActive","remove","previousSibling","pause","nextSibling","play","favoritesList","showArtwork","trackName","previewUrl","artworkUrl30","collectionName","trackNumber","size","onClick","event","showAudio","controls","kind","htmlFor","id","type","onChange","handleFavorite","some","defaultProps","getMusics","fetch","request","json","requestJson","results","Album","musicList","toggleLoading","bind","updateFavoriteSongs","retrieveAlbumTime","match","params","console","log","currentState","url","replace","songsList","_song","index","accTime","Date","reduce","accum","trackTimeMillis","millisToHour","hours","Math","floor","minutes","seconds","artworkUrl100","artistName","primaryGenreName","releaseDate","trackCount","convertArtworkSize","split","map","Favorites","length","Login","isButtonDisabled","isLoggedIn","value","preventDefault","handleChange","placeholder","handleSubmit","disabled","NotFound","Profile","userName","userEmail","userBio","ProfileEdit","isInfoSaved","validateButton","newInfo","isFormFilled","isEmailValid","test","AlbumCard","album","collectionId","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionPrice","Search","artistSearched","albumsList","currentArtistName","albums","handleSearch","App","path","render","component","exact","React","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.766502dd.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport './Loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <p className=\"loading\">Carregando...</p>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport './Header.css';\nimport Loading from './Loading';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      user: '',\n    };\n  }\n\n  async componentDidMount() {\n    const user = await getUser();\n    this.setState({\n      loading: false,\n      user: user.name,\n      userImg: user.image,\n    });\n  }\n\n  render() {\n    const { loading, user, userImg } = this.state;\n    return (\n      <header data-testid=\"header-component\">\n        <h1>TrybeTunes</h1>\n        <nav>\n          <Link to=\"/search\" data-testid=\"link-to-search\">Pesquisa</Link>\n          <Link to=\"/favorites\" data-testid=\"link-to-favorites\">Favoritas</Link>\n          <Link to=\"/profile\" data-testid=\"link-to-profile\">Perfil</Link>\n        </nav>\n        <div className=\"header-profileContainer\">\n          { loading\n            ? (\n              <>\n                <img\n                  className=\"header-profile-img\"\n                  src=\"./images/default-profile.jpeg\"\n                  alt=\"\"\n                />\n                <Loading />\n              </>)\n            : (\n              <>\n                <img className=\"header-profile-img\" src={ userImg } alt=\"\" />\n                <p data-testid=\"header-user-name\">{user}</p>\n              </>\n            )}\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { BsPlayCircle } from 'react-icons/bs';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport './MusicCard.css';\n\nclass MusicCard extends Component {\n  async handleFavorite({ target }) {\n    const { track, toggleLoadingHandler, updateHandler } = this.props;\n    // Aqui estou invertendo pois o target.checked está retornando o valor já após o clique, visto que estou trabalhando no evento onChange. Por isso nomeei a variável para wasChecked, a fim de ficar mais compreensivo.\n    const wasChecked = !target.checked;\n    toggleLoadingHandler();\n    if (wasChecked) {\n      await removeSong(track);\n    } else {\n      await addSong(track);\n    }\n    await updateHandler();\n    toggleLoadingHandler();\n  }\n\n  showAudio({ currentTarget }) {\n    const songContainer = document.querySelector('.songContainer');\n    const isMobile = getComputedStyle(songContainer).justifyContent === 'space-between';\n    if (!isMobile) {\n      currentTarget.classList.add('display-none');\n    }\n    const currentActive = document.querySelector('.active');\n    if (currentActive) {\n      currentActive.classList.remove('active');\n      currentActive.previousSibling.classList.remove('display-none');\n      currentActive.pause();\n    }\n    currentTarget.nextSibling.classList.add('active');\n    currentTarget.nextSibling.play();\n  }\n\n  render() {\n    const { track, favoritesList, showArtwork } = this.props;\n    const { trackName, trackId, previewUrl,\n      artworkUrl30, collectionName, trackNumber } = track;\n    return (\n      <div className=\"songContainer\">\n        {showArtwork\n          && <img src={ artworkUrl30 } alt={ collectionName } className=\"songcard-img\" />}\n        {!showArtwork && <span>{trackNumber}</span> }\n        <h4>{trackName}</h4>\n        <BsPlayCircle size=\"1.6em\" onClick={ (event) => this.showAudio(event) } />\n        <audio\n          className=\"hidden\"\n          data-testid=\"audio-component\"\n          src={ previewUrl }\n          controls\n        >\n          <track kind=\"captions\" />\n          O seu navegador não suporta o elemento\n          {' '}\n          <code>audio</code>\n          .\n        </audio>\n        <label htmlFor={ `check-${trackId}` }>\n          <input\n            id={ `check-${trackId}` }\n            type=\"checkbox\"\n            className=\"favoriteCheck\"\n            data-testid={ `checkbox-music-${trackId}` }\n            onChange={ (event) => this.handleFavorite(event, trackId) }\n            checked={ favoritesList.some((song) => song.trackId === trackId) }\n          />\n          Favorita\n        </label>\n      </div>\n    );\n  }\n}\n\nMusicCard.defaultProps = {\n  showArtwork: false,\n};\n\nMusicCard.propTypes = {\n  track: PropTypes.objectOf(PropTypes.any).isRequired,\n  toggleLoadingHandler: PropTypes.func.isRequired,\n  updateHandler: PropTypes.func.isRequired,\n  favoritesList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showArtwork: PropTypes.bool,\n};\n\nexport default MusicCard;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport getMusics from '../services/musicsAPI';\nimport './Album.css';\n\nclass Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      musicList: [],\n      loading: true,\n      favoritesList: [],\n    };\n\n    this.toggleLoading = this.toggleLoading.bind(this);\n    this.updateFavoriteSongs = this.updateFavoriteSongs.bind(this);\n    this.retrieveAlbumTime = this.retrieveAlbumTime.bind(this);\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { id } = match.params;\n    const musicList = await getMusics(id);\n    this.setState({\n      musicList,\n      loading: false,\n    });\n    console.log(musicList);\n    this.updateFavoriteSongs();\n  }\n\n  async updateFavoriteSongs() {\n    const favoriteSongs = await getFavoriteSongs();\n    this.setState({\n      favoritesList: favoriteSongs,\n    });\n  }\n\n  toggleLoading() {\n    this.setState((currentState) => ({\n      loading: !currentState.loading,\n    }));\n  }\n\n  convertArtworkSize(url = '') {\n    return url.replace(/100x100bb.jpg/, '300x300bb.jpg');\n  }\n\n  retrieveAlbumTime() {\n    const { musicList } = this.state;\n    const songsList = musicList.filter((_song, index) => index > 0);\n    const accTime = new Date(\n      songsList.reduce((accum, song) => accum + song.trackTimeMillis, 0),\n    );\n    // return `${accTime.getHours()}h ${accTime.getMinutes()}min ${accTime.getSeconds()}s`;\n    const millisToHour = 3600000;\n    const millisToMinute = 60000;\n    const millisToSecond = 1000;\n    const hours = Math.floor(accTime / millisToHour);\n    const minutes = Math.floor((accTime % millisToHour) / millisToMinute);\n    const seconds = Math\n      .floor(((accTime % millisToHour) % millisToMinute) / millisToSecond);\n    return `${hours > 0 ? `${hours}h` : ''} \\\n    ${minutes > 0 ? `${minutes}min` : ''} ${hours > 0 ? '' : `${seconds}s`}`;\n  }\n\n  render() {\n    const { musicList, loading, favoritesList } = this.state;\n    const { artworkUrl100, artistName, collectionName,\n      primaryGenreName, releaseDate, trackCount } = musicList[0] || {};\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <div className=\"albumContainer\">\n          {loading ? <Loading /> : (\n            <>\n              <div className=\"albumHeader\">\n                <img src={ this.convertArtworkSize(artworkUrl100) } alt=\"\" />\n                <div className=\"albumInfo\">\n                  <h3 data-testid=\"artist-name\">{artistName}</h3>\n                  <h2 data-testid=\"album-name\">{collectionName}</h2>\n                  <div className=\"additionalInfo\">\n                    <span>{primaryGenreName}</span>\n                    <span>{releaseDate.split('-')[0]}</span>\n                    <span>\n                      {`${trackCount} ${trackCount > 1 ? 'músicas' : 'música'}`}\n                    </span>\n                    <span>\n                      {this.retrieveAlbumTime()}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"songsListContainer\">\n                {musicList.map((track, index) => (\n                  index > 0 && <MusicCard\n                    track={ track }\n                    key={ track.trackId }\n                    toggleLoadingHandler={ this.toggleLoading }\n                    favoritesList={ favoritesList }\n                    updateHandler={ this.updateFavoriteSongs }\n                  />\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Album;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport './Favorites.css';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      favoritesList: [],\n    };\n\n    this.toggleLoading = this.toggleLoading.bind(this);\n    this.updateFavoriteSongs = this.updateFavoriteSongs.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true }, async () => {\n      const favoritesList = await getFavoriteSongs();\n      this.setState({\n        loading: false,\n        favoritesList });\n    });\n  }\n\n  toggleLoading() {\n    this.setState((currentState) => ({\n      loading: !currentState.loading,\n    }));\n  }\n\n  async updateFavoriteSongs() {\n    console.log('oi');\n    const favoriteSongs = await getFavoriteSongs();\n    this.setState({\n      favoritesList: favoriteSongs,\n    });\n  }\n\n  render() {\n    const { favoritesList, loading } = this.state;\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        <div className=\"favoritesContainer\">\n          {loading\n            ? <Loading />\n            : (\n              <>\n                {favoritesList.map((song) => (\n                  <MusicCard\n                    track={ song }\n                    key={ song.trackId }\n                    favoritesList={ favoritesList }\n                    toggleLoadingHandler={ this.toggleLoading }\n                    updateHandler={ this.updateFavoriteSongs }\n                    showArtwork\n                  />))}\n                {!favoritesList.length && <p>Nenhuma música favoritada</p>}\n              </>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport { createUser } from '../services/userAPI';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      isButtonDisabled: true,\n      isLoggedIn: false,\n      loading: false,\n    };\n  }\n\n  handleChange({ target }) {\n    const minLength = 3;\n    this.setState(() => ({\n      name: target.value,\n      isButtonDisabled: target.value.length < minLength,\n    }));\n  }\n\n  handleSubmit(event) {\n    const { name } = this.state;\n    event.preventDefault();\n    this.setState({\n      loading: true,\n    }, async () => {\n      await createUser({ name, image: './images/default-profile.jpeg' });\n      this.setState({\n        loading: false,\n        isLoggedIn: true,\n      });\n    });\n  }\n\n  render() {\n    const { name, isButtonDisabled, isLoggedIn, loading } = this.state;\n    return (\n      <div className=\"loginContainer\">\n        {/* <img src=\"./trybetunes/images/logo-trybetunes.png\" alt=\"\" className=\"logo\" /> */}\n        <h1 className=\"logo\">TrybeTunes</h1>\n        <div data-testid=\"page-login\" className=\"loginFormContainer\">\n          {loading === true\n            ? <Loading />\n            : (\n              <form>\n                <input\n                  type=\"text\"\n                  onChange={ (event) => this.handleChange(event) }\n                  data-testid=\"login-name-input\"\n                  value={ name }\n                  placeholder=\"Nome\"\n                />\n                <button\n                  type=\"submit\"\n                  onClick={ (event) => this.handleSubmit(event) }\n                  data-testid=\"login-submit-button\"\n                  disabled={ isButtonDisabled }\n                >\n                  Entrar\n                </button>\n              </form>\n            )}\n          {isLoggedIn && <Redirect to=\"/search\" />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">NotFound</div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\nimport './Profile.css';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: '',\n      userEmail: '',\n      userBio: '',\n      userImg: '',\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true }, async () => {\n      const user = await getUser();\n      this.setState({\n        userName: user.name,\n        userEmail: user.email,\n        userBio: user.description,\n        userImg: user.image,\n        loading: false,\n      });\n    });\n  }\n\n  render() {\n    const { userName, userEmail, userBio, userImg, loading } = this.state;\n    return (\n      <div data-testid=\"page-profile\">\n        <Header />\n        <div className=\"profileContainer\">\n          { loading ? <Loading /> : (\n            <>\n              <div className=\"profile-row\">\n                <img\n                  src={ userImg }\n                  className=\"profile-img\"\n                  alt=\"\"\n                  data-testid=\"profile-image\"\n                />\n                <Link to=\"/profile/edit\" className=\"edit-btn\">Editar perfil</Link>\n              </div>\n              <h4>Nome</h4>\n              <p>{userName}</p>\n              <h4>E-mail</h4>\n              <p>{userEmail || 'Nenhum e-mail cadastrado'}</p>\n              <h4>Descrição</h4>\n              <p>{userBio || 'Nenhuma descrição cadastrada'}</p>\n            </>\n          )}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\nimport './ProfileEdit.css';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: '',\n      userEmail: '',\n      userBio: '',\n      userImg: '',\n      loading: false,\n      isButtonDisabled: true,\n      isInfoSaved: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true }, async () => {\n      const user = await getUser();\n      this.setState({\n        userName: user.name,\n        userEmail: user.email,\n        userBio: user.description,\n        userImg: user.image,\n        loading: false,\n      }, this.validateButton);\n    });\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    }, this.validateButton);\n  }\n\n  async handleSubmit(event) {\n    const { userName, userEmail, userBio, userImg } = this.state;\n    const newInfo = {\n      name: userName,\n      email: userEmail,\n      description: userBio,\n      image: userImg,\n    };\n    event.preventDefault();\n    this.setState({ loading: true }, async () => {\n      await updateUser(newInfo);\n      this.setState({ isInfoSaved: true });\n    });\n  }\n\n  validateButton() {\n    const { userName, userEmail, userBio, userImg } = this.state;\n    const isFormFilled = userName.length > 0\n      && userEmail.length > 0 && userBio.length > 0 && userImg.length > 0;\n    const emailFormat = /[a-zA-Z0-9._]+@[a-zA-Z]+\\.[a-zA-Z.]*\\w$/;\n    const isEmailValid = emailFormat.test(userEmail);\n    this.setState({\n      isButtonDisabled: !(isEmailValid && isFormFilled),\n    });\n  }\n\n  render() {\n    const { userName, userEmail, userBio, userImg,\n      loading, isButtonDisabled, isInfoSaved } = this.state;\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header />\n        <div className=\"profileEditContainer\">\n          { loading ? <Loading /> : (\n            <form>\n              <label htmlFor=\"inputName\">\n                Nome\n                <input\n                  type=\"text\"\n                  value={ userName }\n                  name=\"userName\"\n                  id=\"inputName\"\n                  onChange={ (event) => this.handleChange(event) }\n                  data-testid=\"edit-input-name\"\n                />\n              </label>\n              <label htmlFor=\"inputEmail\">\n                E-mail\n                <input\n                  type=\"email\"\n                  value={ userEmail }\n                  name=\"userEmail\"\n                  id=\"inputEmail\"\n                  onChange={ (event) => this.handleChange(event) }\n                  data-testid=\"edit-input-email\"\n                />\n              </label>\n              <label htmlFor=\"inputBio\">\n                Descrição\n                <input\n                  type=\"text\"\n                  value={ userBio }\n                  name=\"userBio\"\n                  id=\"inputBio\"\n                  onChange={ (event) => this.handleChange(event) }\n                  data-testid=\"edit-input-description\"\n                />\n              </label>\n              <label htmlFor=\"inputImg\">\n                Imagem de usuário\n                <input\n                  type=\"text\"\n                  data-testid=\"edit-input-image\"\n                  value={ userImg }\n                  name=\"userImg\"\n                  id=\"inputImg\"\n                  onChange={ (event) => this.handleChange(event) }\n                />\n              </label>\n              <button\n                type=\"submit\"\n                data-testid=\"edit-button-save\"\n                disabled={ isButtonDisabled }\n                onClick={ (event) => this.handleSubmit(event) }\n              >\n                Enviar\n\n              </button>\n            </form>\n          )}\n        </div>\n        {isInfoSaved && <Redirect to=\"/profile\" />}\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './AlbumCard.css';\n\nclass AlbumCard extends Component {\n  render() {\n    const { album } = this.props;\n    const { artworkUrl100, collectionName, artistName, collectionId } = album;\n\n    return (\n      <Link\n        to={ `/album/${collectionId}` }\n        data-testid={ `link-to-album-${collectionId}` }\n        className=\"card\"\n      >\n        <img src={ artworkUrl100.replace(/100x100bb.jpg/, '300x300bb.jpg') } alt=\"\" />\n        <h3 className=\"albumTitle\">{collectionName}</h3>\n        <p className=\"artistName\">{artistName}</p>\n      </Link>\n    );\n  }\n}\n\nAlbumCard.propTypes = {\n  album: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default AlbumCard;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport AlbumCard from '../components/AlbumCard';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport './Search.css';\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artistName: '',\n      artistSearched: '',\n      isButtonDisabled: true,\n      loading: true,\n      albumsList: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: false });\n  }\n\n  handleChange({ target }) {\n    const minLength = 2;\n    this.setState({\n      artistName: target.value,\n      isButtonDisabled: target.value.length < minLength,\n    });\n  }\n\n  handleSearch(event) {\n    const { artistName } = this.state;\n    const currentArtistName = artistName;\n    event.preventDefault();\n    this.setState({\n      artistName: '',\n      loading: true,\n    }, async () => {\n      const albums = await searchAlbumsAPI(currentArtistName);\n      this.setState({\n        loading: false,\n        artistSearched: currentArtistName,\n        albumsList: albums,\n      });\n    });\n  }\n\n  render() {\n    const { artistName, artistSearched, albumsList,\n      isButtonDisabled, loading } = this.state;\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        <div className=\"container\">\n          {loading ? <Loading /> : (\n            <div className=\"searchContainer\">\n              <form>\n                <input\n                  type=\"text\"\n                  onChange={ (event) => this.handleChange(event) }\n                  value={ artistName }\n                  className=\"searchArtistInput\"\n                  data-testid=\"search-artist-input\"\n                  placeholder=\"Nome do artista\"\n                />\n                <button\n                  type=\"submit\"\n                  disabled={ isButtonDisabled }\n                  data-testid=\"search-artist-button\"\n                  onClick={ (event) => this.handleSearch(event) }\n                >\n                  Pesquisar\n                </button>\n              </form>\n              {artistSearched && (\n                <p>\n                  {`Resultado de álbuns de: ${artistSearched}`}\n                </p>\n              )}\n              {!albumsList.length && artistSearched\n                ? <p>Nenhum álbum foi encontrado</p>\n                : (\n                  <div className=\"cardsContainer\">\n                    {albumsList.map(\n                      (album) => <AlbumCard album={ album } key={ album.collectionId } />,\n                    )}\n                  </div>\n                )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport Search from './pages/Search';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route\n            path=\"/album/:id\"\n            render={ (props) => (\n              <Album { ...props } />) }\n          />\n          <Route path=\"/search\" component={ Search } />\n          <Route path=\"/favorites\" component={ Favorites } />\n          <Route path=\"/profile\" component={ Profile } exact />\n          <Route path=\"/profile/edit\" component={ ProfileEdit } exact />\n          <Route path=\"/\" component={ Login } exact />\n          <Route path=\"/*\" component={ NotFound } />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n// import { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}